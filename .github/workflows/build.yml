name: Build ZeldaWindWakerTrainer # İş akışının adı

on:
  push:
    branches:
      - main # main dalına yapılan her "push" işleminde çalıştır.
  pull_request:
    branches:
      - main # main dalına yapılan her "pull request" işleminde çalıştır.
  workflow_dispatch: # Bu satır, iş akışını GitHub UI üzerinden manuel olarak tetikleme yeteneği ekler.

jobs:
  build:
    runs-on: windows-latest # Bu trainer bir Windows uygulaması olduğundan, derleme için Windows ortamı kullanırız.

    steps:
    - name: Depoyu Çıkart # GitHub deposunu sanal makineye klonlar.
      uses: actions/checkout@v4

    - name: .NET Core 3.0 Kurulumu # .NET Core SDK'sını kurar. Trainer .NET Core 3.0 gerektirir.
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '3.0.x' # İstenen .NET Core 3.x sürümünü belirtir.

    - name: Visual C++ Redistributable 2015 Kurulumu # Visual C++ Redistributable 2015'i Chocolatey ile kurar.
      # Chocolatey, Windows için popüler bir paket yöneticisidir ve güvenilir yazılım kurulumu sağlar.
      run: |
        choco install vcredist2015 -y
      # -y parametresi, Chocolatey'nin onay istemeden kurulum yapmasını sağlar.

    - name: Çözümü Derle # Projeyi "Release" yapılandırmasında derler.
      # Proje kök dizinde değil, 'ZeldaWindWakerTrainer' alt dizininde olduğundan,
      # dotnet komutuna bu dizini belirtmemiz gerekir.
      run: dotnet build ZeldaWindWakerTrainer/ZeldaWindWakerTrainer.csproj --configuration Release

    - name: Derlenenleri Yükle # Derlenen çıktı dosyalarını (artifacts) bir ZIP dosyası olarak yükler.
      uses: actions/upload-artifact@v4
      with:
        name: ZeldaWindWakerTrainer # Yüklenecek ZIP dosyasının adı
        # Derlenmiş uygulamanın yolu. Proje alt dizinde olduğu için yolu buna göre güncelledik.
        path: ZeldaWindWakerTrainer/bin/Release/netcoreapp3.0/
